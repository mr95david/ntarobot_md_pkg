cmake_minimum_required(VERSION 3.8)
project(ntarobot_localization)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
include_directories(include)

add_executable(kalmanf_imu src/kalmanf_imu.cpp)
ament_target_dependencies(kalmanf_imu rclcpp sensor_msgs nav_msgs)

add_executable(imu_republish src/imu_republish.cpp)
ament_target_dependencies(imu_republish rclcpp sensor_msgs)

# Instalacion de los paquetes usados en este cpp
install(
  DIRECTORY include
  DESTINATION include
)

install(TARGETS kalmanf_imu
DESTINATION lib/${PROJECT_NAME})

install(TARGETS imu_republish
DESTINATION lib/${PROJECT_NAME})

install(
  DIRECTORY launch config
  DESTINATION share/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
